unit Zinsrechner;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Menus, Vcl.StdCtrls, Vcl.ExtCtrls, Math, About;

type
  TForm1 = class(TForm)
    Titel: TLabel;
    MainMenu1: TMainMenu;
    Info: TMenuItem;
    Kapital: TLabel;
    Zinssatz: TLabel;
    Laufzeit: TLabel;
    Eingabe_Kapital: TEdit;
    Zeichen_EUR: TLabel;
    Eingabe_Zinssatz: TEdit;
    Zeichen_Prozent: TLabel;
    EIngabe_Laufzeit: TEdit;
    Verzinsung: TLabel;
    Panel1: TPanel;
    Button_Einfach: TRadioButton;
    Button_ZInseszins: TRadioButton;
    Panel2: TPanel;
    Button_Jahre: TRadioButton;
    Button_Monate: TRadioButton;
    Button_Berechnen: TButton;
    Lb_Results: TListBox;
    Btn_Del: TButton;
    Creator1: TMenuItem;
    Btn_Clear: TButton;
    procedure N2Click(Sender: TObject);
    procedure Button_BerechnenClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure Eingabe_KapitalKeyPress(Sender: TObject; var Key: Char);
    procedure Eingabe_KapitalChange(Sender: TObject);
    procedure Btn_ClearClick(Sender: TObject);
    procedure Btn_DelClick(Sender: TObject);
    procedure Creator1Click(Sender: TObject);
  private
    { Private declarations }
    Zinsen : Double;
    FCounter : Integer;
    function IsKapitalInputValid(Sender: TObject): Boolean;
    function IsZinssatzInputValid(Sender: TObject): Boolean;
    procedure EnableCalcButton(Sender: TObject);
    procedure EnableClearButton(Sender: TObject);
    procedure EnableDelButton(Sender: TObject);
    procedure RenumberResults;
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

function TForm1.IsKapitalInputValid(Sender: TObject): Boolean;
var
  Wert : Currency;
  fs   : TFormatSettings;
  Nachkommastellen: Integer;
  Eingabe: string;
begin
  fs := TFormatSettings.Create;
  fs.DecimalSeparator := ',';
  fs.ThousandSeparator := #0;

  Eingabe := Eingabe_Kapital.Text;

  if TryStrToCurr(Eingabe, Wert, fs) then
  begin
    Nachkommastellen := Length(Eingabe) - Pos(',', Eingabe);

    Result := (Nachkommastellen = 2);
  end
  else
    Result := False;
end;


function TForm1.IsZinssatzInputValid(Sender: TObject): Boolean;
begin
  Result := False;

  if TryStrToFloat(Eingabe_Zinssatz.Text, Zinsen) then
    Result := True;
end;


function StringToFloatDE(const S: string): Double;
var
  Temp: string;
begin
  Temp := S;

  Temp := StringReplace(temp, ',', '.', [rfReplaceAll]);

  Result := StrToFloat(temp, TFormatSettings.Create('en-US'));
end;


function FormatErgebnisText(const Kapital, Ergebnis: Currency;
                            const Jahre: Double;
                            const Zinssatz: Double;
                            const IstEinfacherZins: Boolean): String;
var
  fs: TFormatSettings;
  sZeit, sArt: string;
  zinsbetrag: Currency;
  width: Integer;
begin
  fs := TFormatSettings.Create;
  fs.DecimalSeparator := ',';
  fs.ThousandSeparator := '.';

  width := 15;

  if (Abs(Jahre - 1.0) < 1E-9) then
    sZeit := '1 Jahr'
  else
    sZeit := FormatFloat('0.##', Jahre, fs) + ' Jahre';

  if IstEinfacherZins then
    sArt := 'einfacher Zins'
  else
    sArt := 'Zinseszins';

  Zinsbetrag := Ergebnis - Kapital;

  Result :=
    Format('%-12s %*s', ['Ergebnis:',   width, FormatCurr('#,##0.00 €', Ergebnis, fs)])   + sLineBreak +
    Format('%-12s %*s', ['Kapital:',    width, FormatCurr('#,##0.00 €', Kapital, fs)])    + sLineBreak +
    Format('%-12s %*s', ['Zins:',       width, FormatCurr('#,##0.00 €', Zinsbetrag, fs)]) + sLineBreak +
    Format('%-12s %*s', ['Zeit:',       width, sZeit])                                    + sLineBreak +
    Format('%-12s %*s', ['Zinssatz:',   width, FormatFloat('0.##', Zinssatz * 100, fs) + ' %']) + sLineBreak +
    Format('%-12s %*s', ['Berechnung:', width, sArt]);
end;


procedure TForm1.RenumberResults;
var
  i,
  p: Integer;
  s,
  rest: string;
begin
  for i := 0 to Lb_Results.Count - 1 do
  begin
    s := Lb_Results.Items[i];
    p := Pos(':', s);
    if p > 0 then
      rest := Trim(Copy(s, p+1, MaxInt))
    else
      rest := s;

    Lb_Results.Items[i] := Format('Rechnung #%0.4d: %s', [i+1, rest]);
  end;

  FCounter := Lb_Results.Count;
end;


procedure TForm1.Eingabe_KapitalChange(Sender: TObject);
begin
  EnableCalcButton(Sender);
  EnableClearButton(Sender);
end;


procedure TForm1.Eingabe_KapitalKeyPress(Sender: TObject; var Key: Char);
begin
  if not (Key in ['0'..'9', #8, ',']) then
		Key := #0;
end;


procedure TForm1.EnableCalcButton(Sender: TObject);
begin
  Button_Berechnen.Enabled := (Eingabe_Kapital.Text <> '') and
                              (Eingabe_Zinssatz.Text <> '') and
                              (Eingabe_Laufzeit.Text <> '') and
                              IsZinssatzInputValid(Sender) and
                              IsKapitalInputValid(Sender);
end;


procedure TForm1.EnableClearButton(Sender: TObject);
begin
  Btn_Clear.Enabled := (Eingabe_Kapital.Text <> '') or
                       (Eingabe_Zinssatz.Text <> '') or
                       (Eingabe_Laufzeit.Text <> '');
end;


procedure TForm1.EnableDelButton(Sender: TObject);
begin
  Btn_Del.Enabled := (Lb_Results.Count > 0);
end;


procedure TForm1.FormCreate(Sender: TObject);
begin
  FCounter := 0;

  EnableCalcButton(Sender);
  EnableClearButton(Sender);
  EnableDelButton(Sender);
end;


procedure TForm1.Btn_ClearClick(Sender: TObject);
begin
  Eingabe_Kapital.Text := '';
  Eingabe_Zinssatz.Text := '';
  Eingabe_Laufzeit.Text := '';

  Button_Einfach.Checked := False;
  Button_Zinseszins.Checked := False;
  Button_Jahre.Checked := False;
  Button_Monate.Checked := False;
end;


procedure TForm1.Btn_DelClick(Sender: TObject);
var
  Idx : Integer;
begin
  Idx := Lb_Results.ItemIndex;

  if (Idx >= 0) then
  begin
    Lb_Results.Items.Delete(Idx);
    RenumberResults;
  end;

  EnableDelButton(Sender);
end;


procedure TForm1.Button_BerechnenClick(Sender: TObject);
var
  Kapital,
  Zinssatz,
  Zeit,
  Ergebnis : Double;
  IsEinfacherZins : Boolean;
  Idx : Integer;
begin
  Kapital  := StringToFloatDE(Eingabe_Kapital.Text);

  Zeit  := StrToFloat(Eingabe_Laufzeit.Text);

  if Button_Monate.Checked then
    Zeit := Zeit / 12;

  if TryStrToFloat(Eingabe_Zinssatz.Text, Zinssatz) then
  begin
    Zinssatz := Zinssatz / 100;

    if Button_Einfach.Checked then
      Ergebnis := Kapital * (1 + Zinssatz * Zeit)
    else
      Ergebnis := Kapital * Power((1 + Zinssatz), Zeit);

    FCounter := Lb_Results.Count + 1;
  end
  else
    raise Exception.Create('Es ist Mumpitz passiert!');

  IsEinfacherZins := Button_Einfach.Checked;

  ShowMessage(FormatErgebnisText(Kapital, Ergebnis, Zeit, Zinssatz, IsEinfacherZins));

  Lb_Results.Items.Add(
  Format('Rechnung #%0.4d: %s',
    [FCounter, FormatCurr('#,##0.00 €', Ergebnis)])
  );

  EnableDelButton(Sender);
end;


procedure TForm1.Creator1Click(Sender: TObject);
begin
  TFrmAbout.Execute('Leonard Steinbi$$', 'https://github.com/dein-projekt');
end;

procedure TForm1.N2Click(Sender: TObject);
begin
  Close;
end;

end.
